<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.appfluent.us/xwidget"
    targetNamespace="http://www.appfluent.us/xwidget">

    <!-- simple types -->

    <xs:simpleType name="builderReturnTypeAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="Widget"/>
                    <xs:enumeration value="Widget?"/>
                    <xs:enumeration value="List:Widget"/>
                    <xs:enumeration value="List:PopupMenuEntry"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="expressionAttributeType">
        <xs:restriction base="xs:string">
            <xs:pattern value="\$\{.*\}" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="dependenciesScopeAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="copy"/>
                    <xs:enumeration value="inherit"/>
                    <xs:enumeration value="new"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="boolAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="true"/>
                    <xs:enumeration value="false"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="integerAttributeType">
        <xs:union memberTypes="expressionAttributeType xs:integer"/>
    </xs:simpleType>

    <xs:simpleType name="AlignmentAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="topLeft"/>
                    <xs:enumeration value="topCenter"/>
                    <xs:enumeration value="topRight"/>
                    <xs:enumeration value="centerLeft"/>
                    <xs:enumeration value="center"/>
                    <xs:enumeration value="centerRight"/>
                    <xs:enumeration value="bottomLeft"/>
                    <xs:enumeration value="bottomCenter"/>
                    <xs:enumeration value="bottomRight"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="BuildExecutionAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="async"/>
                    <xs:enumeration value="sync"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="CurvesAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="bounceIn"/>
                    <xs:enumeration value="bounceInOut"/>
                    <xs:enumeration value="bounceOut"/>
                    <xs:enumeration value="decelerate"/>
                    <xs:enumeration value="ease"/>
                    <xs:enumeration value="easeIn"/>
                    <xs:enumeration value="easeInBack"/>
                    <xs:enumeration value="easeInCirc"/>
                    <xs:enumeration value="easeInCubic"/>
                    <xs:enumeration value="easeInExpo"/>
                    <xs:enumeration value="easeInOut"/>
                    <xs:enumeration value="easeInOutBack"/>
                    <xs:enumeration value="easeInOutCirc"/>
                    <xs:enumeration value="easeInOutCubic"/>
                    <xs:enumeration value="easeInOutCubicEmphasized"/>
                    <xs:enumeration value="easeInOutExpo"/>
                    <xs:enumeration value="easeInOutQuad"/>
                    <xs:enumeration value="easeInOutQuart"/>
                    <xs:enumeration value="easeInOutQuint"/>
                    <xs:enumeration value="easeInOutSine"/>
                    <xs:enumeration value="easeInQuad"/>
                    <xs:enumeration value="easeInQuart"/>
                    <xs:enumeration value="easeInQuint"/>
                    <xs:enumeration value="easeInSine"/>
                    <xs:enumeration value="easeInToLinear"/>
                    <xs:enumeration value="easeOut"/>
                    <xs:enumeration value="easeOutBack"/>
                    <xs:enumeration value="easeOutCirc"/>
                    <xs:enumeration value="easeOutCubic"/>
                    <xs:enumeration value="easeOutExpo"/>
                    <xs:enumeration value="easeOutQuad"/>
                    <xs:enumeration value="easeOutQuart"/>
                    <xs:enumeration value="easeOutQuint"/>
                    <xs:enumeration value="easeOutSine"/>
                    <xs:enumeration value="elasticIn"/>
                    <xs:enumeration value="elasticInOut"/>
                    <xs:enumeration value="elasticOut"/>
                    <xs:enumeration value="fastLinearToSlowEaseIn"/>
                    <xs:enumeration value="fastOutSlowIn"/>
                    <xs:enumeration value="linear"/>
                    <xs:enumeration value="linearToEaseOut"/>
                    <xs:enumeration value="slowMiddle"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="FontWeightAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="100"/>
                    <xs:enumeration value="200"/>
                    <xs:enumeration value="300"/>
                    <xs:enumeration value="400"/>
                    <xs:enumeration value="500"/>
                    <xs:enumeration value="600"/>
                    <xs:enumeration value="700"/>
                    <xs:enumeration value="800"/>
                    <xs:enumeration value="900"/>
                    <xs:enumeration value="thin"/>
                    <xs:enumeration value="extraLight"/>
                    <xs:enumeration value="light"/>
                    <xs:enumeration value="normal"/>
                    <xs:enumeration value="medium"/>
                    <xs:enumeration value="semiBold"/>
                    <xs:enumeration value="bold"/>
                    <xs:enumeration value="extraBold"/>
                    <xs:enumeration value="black"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="ListOperationAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="add"/>
                    <xs:enumeration value="spread"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="TextDecorationAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="lineThrough"/>
                    <xs:enumeration value="overline"/>
                    <xs:enumeration value="underline"/>
                    <xs:enumeration value="none"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="VariableDisposalAttributeType">
        <xs:union memberTypes="expressionAttributeType">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="none"/>
                    <xs:enumeration value="byOwner"/>
                    <xs:enumeration value="byLastListener"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!-- generated enum types -->

    <!--@@enumTypes@@-->

    <!-- complex types -->

    <xs:complexType name="listItemType">
        <xs:sequence>
            <xs:any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="value" use="required"/>
        <xs:attribute name="visible" type="boolAttributeType"/>
    </xs:complexType>

    <xs:complexType name="mapEntryType">
        <xs:sequence>
            <xs:any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="key" use="required"/>
        <xs:attribute name="value"/>
        <xs:attribute name="visible" type="boolAttributeType"/>
    </xs:complexType>

    <xs:complexType name="objectType" mixed="true">
        <xs:sequence>
            <xs:any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="for" type="xs:string"/>
        <xs:attribute name="visible" type="boolAttributeType"/>
    </xs:complexType>

    <xs:complexType name="paramType">
        <xs:sequence>
            <xs:any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" use="required"/>
        <xs:attribute name="value"/>
        <xs:attribute name="visible" type="boolAttributeType"/>
    </xs:complexType>

    <!-- built-in tag elements -->

    <xs:element name="builder">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType >
            <xs:sequence>
                <xs:any namespace="##targetNamespace" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="for" type="xs:string"/>
            <xs:attribute name="vars" type="xs:string"/>
            <xs:attribute name="returnType" type="builderReturnTypeAttributeType"/>
            <xs:attribute name="dependenciesScope" type="dependenciesScopeAttributeType"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="callback">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType >
            <xs:attribute name="for" type="xs:string" use="required"/>
            <xs:attribute name="action" type="xs:string" use="required"/>
            <xs:attribute name="returnVar" type="xs:string"/>
            <xs:attribute name="vars" type="xs:string"/>
            <xs:attribute name="dependenciesScope" type="dependenciesScopeAttributeType"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="debug">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="message" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="forEach">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:any namespace="##targetNamespace" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="var" type="xs:string" use="required"/>
            <xs:attribute name="indexVar" type="xs:string"/>
            <xs:attribute name="items" type="xs:string" use="required"/>
            <xs:attribute name="groupSize" type="integerAttributeType"/>
            <xs:attribute name="dependenciesScope" type="dependenciesScopeAttributeType"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="forLoop">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:any namespace="##targetNamespace" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="var" type="xs:string" use="required"/>
            <xs:attribute name="begin" type="integerAttributeType"/>
            <xs:attribute name="end" type="integerAttributeType"/>
            <xs:attribute name="step" type="integerAttributeType"/>
            <xs:attribute name="dependenciesScope" type="dependenciesScopeAttributeType"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="fragment">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="forEach" form="qualified">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="param" type="paramType" form="qualified"/>
                        </xs:sequence>
                        <xs:attribute name="var" type="xs:string" use="required"/>
                        <xs:attribute name="indexVar" type="xs:string"/>
                        <xs:attribute name="items" type="xs:string" use="required"/>
                        <xs:attribute name="start" type="integerAttributeType"/>
                        <xs:attribute name="end" type="integerAttributeType"/>
                        <xs:attribute name="dependenciesScope" type="dependenciesScopeAttributeType"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="if" form="qualified">
                    <xs:complexType>
                        <xs:choice maxOccurs="unbounded">
                            <xs:element name="param" type="paramType" form="qualified"/>
                        </xs:choice>
                        <xs:attribute name="test" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="param" type="paramType" form="qualified"/>
            </xs:choice>
            <xs:attribute name="for" type="xs:string"/>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="visible" type="boolAttributeType"/>
            <xs:attribute name="dependenciesScope" type="dependenciesScopeAttributeType"/>
            <xs:anyAttribute processContents="lax"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="if">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:any namespace="##targetNamespace" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="test" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="else">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:any namespace="##targetNamespace" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="var">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="value" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <!-- built-in inflater elements -->

    <xs:element name="Controller">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="objectType">
                    <xs:attribute name="key"/>
                    <xs:attribute name="name"/>
                    <xs:attribute name="errorWidget"/>
                    <xs:attribute name="progressWidget"/>
                    <xs:attribute name="options"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="DynamicBuilder">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="objectType">
                    <xs:attribute name="key"/>
                    <xs:attribute name="builder"/>
                    <xs:attribute name="errorWidget"/>
                    <xs:attribute name="progressWidget"/>
                    <xs:attribute name="initializer"/>
                    <xs:attribute name="initValue"/>
                    <xs:attribute name="disposeOfDependencies" type="boolAttributeType"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="EventListener">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="objectType">
                    <xs:attribute name="key"/>
                    <xs:attribute name="event"/>
                    <xs:attribute name="onEvent"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="List">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="objectType">
                    <xs:sequence>
                        <xs:element name="Item" form="qualified" type="listItemType" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="innerLists" type="ListOperationAttributeType"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="Map">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Entry" form="qualified" type="mapEntryType" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="for" type="xs:string"/>
            <xs:attribute name="visible" type="boolAttributeType"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="MediaQuery">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="objectType">
                    <xs:attribute name="key"/>
                    <xs:attribute name="varName" type="xs:string"/>
                    <xs:attribute name="smallMaxWidth" type="integerAttributeType"/>
                    <xs:attribute name="mediumMaxWidth" type="integerAttributeType"/>
                    <xs:attribute name="dependenciesScope" type="dependenciesScopeAttributeType"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="ValueListener">
        <xs:annotation>
            <xs:documentation xml:lang="en">
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="objectType">
                    <xs:attribute name="key"/>
                    <xs:attribute name="varName"/>
                    <xs:attribute name="varDisposal" type="VariableDisposalAttributeType"/>
                    <xs:attribute name="initialValue"/>
                    <xs:attribute name="defaultValue"/>
                    <xs:attribute name="onChange"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- generated inflater elements -->

    <!--@@inflaters@@-->

</xs:schema>
